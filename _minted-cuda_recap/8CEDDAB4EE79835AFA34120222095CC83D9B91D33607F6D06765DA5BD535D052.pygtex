\begin{Verbatim}[commandchars=\\\{\}]
\PYG{x}{int main()\PYGZob{}}
\PYG{x}{   float *A, *dA;}
\PYG{x}{   size\PYGZus{}t pitch;}

\PYG{x}{   A = (float *)malloc(sizeof(float)*N*N); // allocate on host}
\PYG{x}{   cudaMallocPitch(\PYGZam{}dA, \PYGZam{}pitch, sizeof(float)*N, N); // allocate on device}

\PYG{x}{   //copy memory}
\PYG{x}{   cudaMemcpy2D(dA,pitch,A,sizeof(float)*N,sizeof(float)*N, N,\PYGZbs{}}
\PYG{x}{      cudaMemcpyHostToDevice);}
\PYG{x}{         /*...*/}
\PYG{x}{\PYGZcb{}}
\PYG{x}{\PYGZus{}\PYGZus{}global\PYGZus{}\PYGZus{} void access\PYGZus{}2d(float* devPtr, size\PYGZus{}t pitch,\PYGZbs{}}
\PYG{x}{            int width, int height) \PYGZob{}}
\PYG{x}{    for (int r = 0; r \PYGZlt{} height; ++r) \PYGZob{}}
\PYG{x}{        float* row = (float*)((char*)devPtr + r * pitch);}
\PYG{x}{        for (int c = 0; c \PYGZlt{} width; ++c) \PYGZob{}}
\PYG{x}{            float element = row[c];}
\PYG{x}{        \PYGZcb{}}
\PYG{x}{    \PYGZcb{}}
\PYG{x}{\PYGZcb{}}
\end{Verbatim}
